---
title: "Tomar decisiones para aprender"
author: "Gerardo Pérez"
date: "2023-07-08"
image: "image.jpg"
---

Pasar del qué debería aprender, al aprender.

------------------------------------------------------------------------

Bueno, oficialmente este es el primer post/artículo/entrada del blog. Al menos el primero después de una [larga historia de quién soy](https://gera0220.github.io/posts/bienvenida/). Hace un par de días estaba viendo una plática sobre el [stack moderno de datos](https://www.youtube.com/watch?v=h5bq3gsDDd0&t=293s). Se tocaron varios temas, pero mi mente se centró en DuckDB vs Apache Spark. Y no es sorpresa. Llevo mucho tiempo considerando meterme de lleno en aprender alguna herramienta que me ayude en al análisis de grandes conjuntos de datos y naturalmente Apache Spark había sido el que más escuchaba nombrar. Por otro lado, aunque menos escuchado, DuckDB se escuchaba como una gran alternativa a Spark.

## La incertidumbre

Una de las cosas que he procurado a lo largo de mi aprendizaje es estar lo más modernizado posible, sea hablando de conocimientos, de herramientas o cualquier cosa, en general. La razón: no quiero quedarme atrás. No quiero tener la preocupación de caer en la obsolescencia y después tener que empezar de cero por necesidad. Dicho esto, ahora comprenderán por qué mi mente se centró en DuckDB vs Spark. Una alternativa nueva al "viejo" Spark.

Dije que vi la plática hace un par de días, sin embargo no es la primera vez que llega a mi cabeza la idea de aprender alguna de estas herramientas. La realidad es que llevo meses con la incertidumbre de qué debería aprender: irme por Spark, la herramienta clásica que la gran mayoría de los empleadores buscan, o decantarme por DuckDB y, quizá, adelantarme un poco al mercado. En todo este tiempo de incertidumbre ciertamente he aprendido cosas, sin embargo ninguna de ellas relacionada a DuckDB o Spark.

Y no es la primera vez que me sucede, y estoy seguro que como a mí cualquier persona que inicia en el mundo de la tan aclamada ciencia de datos inició preguntándose: ¿debería empezar con Python o con R? Y seguramente, como yo, dedicaron varios días o semanas investigando los beneficios de uno u otro. Ciertamente es importante dedicar tiempo a la investigación del *qué debería a prender*, después de todo el proceso no es tan rápido como para aprender todo lo que existe, y al hablar de datos el stack ciertamente no es reducido. Sin embargo, entre más tiempo dedicamos al qué aprender, menos tiempo es dedicado *al aprender*.

Y no sólo me sucede con lo que quiero aprender, también me sucede con otras cosas. Este blog, por ejemplo. Tengo más de 10 meses *considerando* que debería escribir uno. Así que cuando la idea nació pasé semanas investigando formatos para un blog, pensando en dominios llamativos para el sitio que pudieran atraer personas, viendo dónde debería hostear el sitio, pensando si debería hacer la página desde 0 o utilizar alguna alternativa. ¿La realidad? No hice absolutamente nada en todo ese tiempo.

## La decisión

Tras ver esa plática fue cuando entendí que debería dejar de preocuparme tanto sobre el qué aprender o el qué hacer y comenzar a preocuparme en aprender y hacer. Las cosas mejorarán con el tiempo, probablemente. Después de ver la plática y pensar en que este tema sería lo primero que me gustaría tocar en el blog, estoy seguro que no tardé más de un par de horas en googlear cómo hacer un [blog con Quarto](https://quarto.org/docs/websites/website-blog.html), seguir los pasos, escribir mi post de bienvenida y publicar el sitio. Lo más fácil muchas veces es la mejor opción para comenzar.

En cuanto a cuál fue mi decisión sobre DuckDB y Spark bueno, me decidí por Spark. Probablemente los siguientes posts serán sobre mi proceso de aprendizaje y cómo voy lidiando con las cosas que saltan además de quizá explicar por qué opté por Spark. Spoiler: tenía que empezar con algo.
